const { references } = require('../../lib/tableUtils');

exports.up = async (knex) => {
    await knex.schema.createTable('follow', (table) => {
        references(table, 'user', undefined, 'follower')
        references(table, 'user', undefined, 'followee')
        table.primary(['follower', 'followee'])
        table.timestamps(true, true)
    })
    await knex.schema.createTable('cart', (table) => {
        table.increments('cart_id')
        references(table, 'listing')
        references(table, 'user')
        table.integer('price')
        table.timestamps(true, true)
    })
    await knex.schema.createTable('blocked', (table) => {
        references(table, 'user', undefined, 'blocker')
        references(table, 'user', undefined, 'blockee')
        table.primary(['blocker', 'blockee'])
        table.timestamps(true, true)
    })
    await knex.schema.createTable('payout', (table) => {
        table.increments('payout_id')
        references(table, 'user')
        table.float('amount').notNullable()
        table.timestamp('requested').defaultTo(knex.fn.now()).notNullable()
        table.timestamp('completed')
        table.timestamps(true,true)
    })
    await knex.schema.createTable('report', (table) => {
        table.increments('report_id')
        references(table, 'user', undefined, 'offender')
        references(table, 'user', undefined, 'reporter')
        // TODO maybe change to enum?
        table.string('category')
        table.text('details')
        table.timestamps(true,true)
    })
    await knex.schema.createTable('chat', (table) => {
        table.increments('chat_id')
        references(table, 'user', undefined, 'seller_id')
        references(table, 'user', undefined, 'buyer_id')
        references(table, 'user', notNullable=false, 'last_viewer')
        references(table, 'user', notNullable=false, 'last_updater')
        references(table, 'listing')
        table.boolean('visible').defaultTo(true)
        table.timestamps(true, true)
    })
    await knex.schema.createTable('offer', (table) => {
        table.increments('offer_id')
        references(table, 'chat')
        table.float('price').notNullable()
        table.enu('status', ['pending', 'accepted', 'rejected', 'canceled']).defaultTo('pending')
        table.timestamps(true, true)
    })
    await knex.schema.createTable('transaction', (table) => {
        table.increments('transaction_id')
        references(table, 'user', undefined, 'seller_id')
        references(table, 'user', undefined, 'buyer_id')
        references(table, 'listing')
        table.float('amount_paid').notNullable()
        table.enu('status', ['awaiting_shipment', 'shipped', 'received', 'canceled', 'awaiting_return', 'refunded']).defaultTo('awaiting_shipment')
        table.string('shipping_num')
        references(table, 'address')
        table.timestamp('ship_time')
        table.text('photo').notNullable()
        table.timestamps(true, true)
    })
    await knex.schema.createTable('ban', (table) => {
        table.increments('ban_id')
        references(table, 'user')
        table.string('verified_email')
        table.integer('verified_phone', 10)
        table.timestamps(true, true)
    })
    await knex.schema.createTable('message', (table) => {
        table.increments('message_id')
        references(table, 'chat')
        references(table, 'user', undefined, 'sender_id')
        table.string('body', 400)
        // table.boolean('read').defaultTo(false)
        table.timestamps(true, true)
    })
    await knex.schema.createTable('log', (table) => {
        table.increments('log_id')
        table.integer('active_accounts')
        table.integer('logins_24h')
        table.integer('logins_7d')
        table.integer('logins_30d')
        table.float('sales_24h')
        table.float('sales_30d')
        table.float('sales_all')
        table.float('refunds_24h')
        table.float('refunds_all')
        table.integer('reports_24h')
        table.integer('reports_all')
        table.timestamps(true, true)
    })
    await knex.schema.createTable('photo', (table) => {
        table.text('photo').primary()
        table.string('title')
        references(table, 'listing')
        table.timestamps(true, true)
    })
    await knex.schema.createTable('save', (table) => {
        table.increments('save_id')
        references(table, 'user')
        references(table, 'listing')
        table.timestamps(true,true)
    })
};

exports.down = async (knex) => {
  await knex.schema.dropTable('save')
  await knex.schema.dropTable('photo')
  await knex.schema.dropTable('log')
  await knex.schema.dropTable('message')
  await knex.schema.dropTable('ban')
  await knex.schema.dropTable('transaction')
  await knex.schema.dropTable('offer')
  await knex.schema.dropTable('chat')
  await knex.schema.dropTable('report')
  await knex.schema.dropTable('payout')
  await knex.schema.dropTable('blocked')
  await knex.schema.dropTable('cart')
  await knex.schema.dropTable('follow')
};
